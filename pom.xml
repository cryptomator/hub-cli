<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.cryptomator</groupId>
	<artifactId>hub-cli</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>hub-cli</name>
	<description>CLI to manage Cryptomator Hub instances</description>

	<organization>
		<name>cryptomator.org</name>
		<url>https://cryptomator.org</url>
	</organization>

	<developers>
		<developer>
			<name>Armin Schrenk</name>
			<email>armin.schrenk+dev@mailbox.org</email>
			<timezone>+1</timezone>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>21</java.version>
		<!-- native image options -->
		<mainClass>org.cryptomator.hubcli.HubCli</mainClass>
		<native.optimization>-Ob</native.optimization> <!-- default: no optimization/dev build-->

		<!-- runtime dependencies -->
		<tinyoauth2.version>0.8.0</tinyoauth2.version>
		<jackson.version>2.15.3</jackson.version>
		<jackson.javatime.version>2.14.2</jackson.javatime.version>
		<cryptolib.version>2.1.2</cryptolib.version>
		<nimbus.version>9.36</nimbus.version>
		<slf4j.version>2.0.9</slf4j.version>

		<!-- build dependencies -->
		<jetbrains.annotations.version>24.0.1</jetbrains.annotations.version>
		<picocli.version>4.7.5</picocli.version>

		<!-- test dependencies -->
		<junit.jupiter.version>5.10.0</junit.jupiter.version>

		<!-- maven plugin dependencies -->
		<dependency-check.version>8.4.0</dependency-check.version>
		<jacoco.version>0.8.11</jacoco.version>
		<mvn-compiler.version>3.11.0</mvn-compiler.version>
		<mvn-jar.version>3.3.0</mvn-jar.version>
		<mvn-surefire.version>3.2.1</mvn-surefire.version>
		<mvn-native.version>0.9.28</mvn-native.version>
		<mvn-gpg.version>3.1.0</mvn-gpg.version>
		<exec-maven-plugin.version>3.1.0</exec-maven-plugin.version>
		<junit-tree-reporter.version>1.2.1</junit-tree-reporter.version>
	</properties>


	<dependencies>
		<dependency>
			<groupId>io.github.coffeelibs</groupId>
			<artifactId>tiny-oauth2-client</artifactId>
			<version>${tinyoauth2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.cryptomator</groupId>
			<artifactId>cryptolib</artifactId>
			<version>${cryptolib.version}</version>
		</dependency>
		<dependency>
			<groupId>com.nimbusds</groupId>
			<artifactId>nimbus-jose-jwt</artifactId>
			<version>${nimbus.version}</version>
		</dependency>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picocli.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${jackson.javatime.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${mvn-compiler.version}</version>
				<configuration>
					<release>${java.version}</release>
					<annotationProcessorPaths>
						<path>
							<groupId>info.picocli</groupId>
							<artifactId>picocli-codegen</artifactId>
							<version>4.7.5</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${mvn-jar.version}</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>${mainClass}</mainClass>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${mvn-surefire.version}</version>
				<dependencies>
					<dependency>
						<groupId>me.fabriciorby</groupId>
						<artifactId>maven-surefire-junit5-tree-reporter</artifactId>
						<version>${junit-tree-reporter.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<argLine>--enable-preview</argLine>
					<reportFormat>plain</reportFormat>
					<consoleOutputReporter>
						<disable>true</disable>
					</consoleOutputReporter>
					<statelessTestsetInfoReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoTreeReporter"/>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${exec-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>generate-autocompletion-script</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<executable>java</executable>
					<arguments>
						<argument>-Dpicocli.autocomplete.systemExitOnError</argument>
						<argument>-cp</argument>
						<classpath/>
						<argument>picocli.AutoComplete</argument>
						<argument>--force</argument>
						<argument>--completionScript</argument>
						<argument>${project.build.directory}/HubCli_completion.sh</argument>
						<argument>org.cryptomator.hubcli.HubCli</argument>
					</arguments>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>release</id>
			<properties>
				<native.optimization>-O3</native.optimization>
			</properties>
			<build>
			</build>
		</profile>

		<profile>
			<id>native</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>${mvn-native.version}</version>
						<extensions>true</extensions>
						<executions>
							<execution>
								<id>build-native</id>
								<goals>
									<goal>compile-no-fork</goal>
								</goals>
								<phase>package</phase>
							</execution>
							<execution>
								<id>test-native</id>
								<goals>
									<goal>test</goal>
								</goals>
								<phase>test</phase>
							</execution>
						</executions>
						<configuration>
							<buildArgs>
								<arg>${native.optimization}</arg>
								<arg>--initialize-at-build-time=org.cryptomator.hubcli.util.LoggerInitializer</arg>
								<!--                                <arg>&#45;&#45;native-compiler-path="C:\graal-native-compiler\Tools\MSVC\14.37.32822\bin\Hostx64\x64\cl.exe"</arg>-->
							</buildArgs>
							<fallback>false</fallback>
							<mainClass>${mainClass}</mainClass>
							<imageName>hub</imageName>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<skipNativeTests>true</skipNativeTests>
							<resourcesConfigDirectory>${basedir}/src/main/resources/META-INF/native-image/org.cryptomator.hubcli/resource-config.json</resourcesConfigDirectory>
							<agent>
								<enabled>true</enabled>
								<defaultMode>Direct</defaultMode>
								<modes>
									<direct>config-output-dir=${basedir}/src/main/resources/META-INF/native-image/org.cryptomator.hubcli</direct>
								</modes>
								<options>
									<callerFilterFiles>
										<filterFile>${basedir}/src/main/resources/META-INF/native-image/caller-filter.json</filterFile>
									</callerFilterFiles>
									<accessFilterFiles>
										<filterFile>${basedir}/src/main/resources/META-INF/native-image/access-filter.json</filterFile>
									</accessFilterFiles>
									<builtinCallerFilter>true</builtinCallerFilter>
									<builtinHeuristicFilter>true</builtinHeuristicFilter>
									<enableExperimentalPredefinedClasses>true</enableExperimentalPredefinedClasses>
									<enableExperimentalUnsafeAllocationTracing>true</enableExperimentalUnsafeAllocationTracing>
									<trackReflectionMetadata>true</trackReflectionMetadata>
								</options>
							</agent>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>dependency-check</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.owasp</groupId>
						<artifactId>dependency-check-maven</artifactId>
						<version>${dependency-check.version}</version>
						<configuration>
							<cveValidForHours>24</cveValidForHours>
							<failBuildOnCVSS>0</failBuildOnCVSS>
							<skipTestScope>true</skipTestScope>
							<detail>true</detail>
							<suppressionFile>suppression.xml</suppressionFile>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
